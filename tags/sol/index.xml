<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sol on Natalie Chin</title>
    <link>https://nataliechin80.github.io/tags/sol/</link>
    <description>Recent content in sol on Natalie Chin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 May 2020 11:17:05 -0400</lastBuildDate>
    
	<atom:link href="https://nataliechin80.github.io/tags/sol/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Solidity Visibility Keywords and Built-In Modifiers</title>
      <link>https://nataliechin80.github.io/post/solidity-function-specification-and-modifiers/</link>
      <pubDate>Fri, 08 May 2020 11:17:05 -0400</pubDate>
      
      <guid>https://nataliechin80.github.io/post/solidity-function-specification-and-modifiers/</guid>
      <description>Solidity functions are usually of the following form, where it specifies a function specifier and a modifier attributed to a certain function. This blog goes into detailed function visibility specifiers (public, external, internal, private) and a few select modifiers (pure, view) that often cause confusion among developers.
function functionName() [public | external | internal | private] {pure | view} returns (bool) { return true; }  Function Visibility Keywords In Solidity, there are 4 function visibility keywords, which are typically used in function definitions to explicitly state who should have access rights to a contract for a certain function.</description>
    </item>
    
  </channel>
</rss>